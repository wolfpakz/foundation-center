require 'json'
require 'faker'
require 'rest-client'

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def fake_ein
  '%09d' % (rand(999999998) + 1)
end

def fake_recipients_json
  #
  # Yanked this directly from Foundation Center's API
  #
  "\r\n\r\n[{\"recipient_ein\":10559608,\"recipient_name\":\"Allied Media Projects\",\"longitude\":-83.0522468,\"latitude\":42.4140992},{\"recipient_ein\":10885325,\"recipient_name\":\"Harriet Tubman Center for Recruitment and Development of Organizers\",\"longitude\":-83.0433412,\"latitude\":42.3345747},{\"recipient_ein\":20648595,\"recipient_name\":\"Michigan Avenue Business Association\",\"longitude\":-83.1306395,\"latitude\":42.3311259},{\"recipient_ein\":20701008,\"recipient_name\":\"'Sistahs Providing Intelligence, Creativity and Empowerment'\",\"longitude\":-83.0522468,\"latitude\":42.4140992},{\"recipient_ein\":20754855,\"recipient_name\":\"Detroit International Jazz Festival Foundation\",\"longitude\":-83.130645,\"latitude\":42.4685724},{\"recipient_ein\":20755116,\"recipient_name\":\"Belle Isle Womens Committee\",\"longitude\":-83.209149,\"latitude\":42.5462149},{\"recipient_ein\":30390058,\"recipient_name\":\"Ballet Renaissance\",\"longitude\":-83.0522468,\"latitude\":42.4140992}]"
end

def fake_grant_key
  rand(99999998) + 1
end

def fake_gm_key
  '%s%03d' % [Faker::Lorem.words(1).first.upcase, rand(98) + 1]
end

def fake_grant_amount
  ('%d000' % (rand(998) + 1)).to_i
end

def fake_grant_details
  {
    "grant_key"               => fake_grant_key,
    "gm_key"                  => fake_gm_key,
    "gm_ein"                  => fake_ein,
    "gm_name"                 => Faker::Company.name,
    "gm_state"                => Faker::Address.state_abbr,
    "amount"                  => fake_grant_amount,
    "duration"                => 1,
    "year_issued"             => [2007, 2008, 2009, 2010, 2011, 2012, 2013].sample,
    "description"             => Faker::Lorem.paragraph(5),
    "grant_activity_code"     => "A3D; W52; R20",
    "grant_activity_tran"     => "'Media access and policy; Electronic communications/Internet; Civil/human rights, advocacy'",
    "grant_pop_code"          => "E0; P0",
    "grant_pop_tran"          => "Minorities; Economically disadvantaged",
    "grant_area_served_tran"  => " ",
    "grant_support_tran"      => "Management development/capacity building; Advocacy; Electronic media/online services; Research; Technical assistance",
    "matching_support_flag"   => " ",
    "continuing_support_flag" => " ",
    "source_of_data"          => "04/11-06/11 EF",
    "grant_country_tran"      => " ",
    "edition"                 => 812,
    "currency"                => " ",
    "unconverted_amt"         => " ",
    "fund_name"               => " ",
    "fund_type"               => " ",
    "fund_sub_type"           => " ",
    "program_area"            => " ",
    "activity_override"       => "A3D",
    "activity_override_tran"  => "Media access and policy",
    "domestic_foreign_flag"   => "D",
    "county"                  => "Wayne ",
    "area_name"               => "'Detroit-Warren-Livonia, MI'"
  }
end

def fake_recipient_details
  {
    'recipient_key'      => rand(9999998) + 1,
    'recip_ein'          => fake_ein,
    'recip_name'         => Faker::Company.name,
    'recip_street_addr'  => Faker::Address.street_address,
    'recip_street_addr2' => Faker::Address.secondary_address,
    'recip_city'         => Faker::Address.city,
    'recip_state'        => Faker::Address.state_abbr,
    'recip_zipcode'      => Faker::Address.zip_code,
    'recip_county'       => "Wayne",
    'recip_type_code'    => "A3E",
    'recip_type_tran'    => "Media democracy",
    'recip_auspice'      => "N",
    'recip_pop_code'     => "E0; P0",
    'recip_pop_tran'     => "Minorities; Economically disadvantaged",
    'recip_unit'         => " ",
    'longitude'          => -83.0522468,
    'latitude'           => 42.4140992
  }
end

def fake_recipient_details_json
  {
    :recipients => [fake_recipient_details],
    :grants => (rand(4) + 1).times.map { fake_grant_details }
  }.to_json
end
